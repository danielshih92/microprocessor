C51 COMPILER V9.60.7.0   ALL                                                               12/27/2023 20:38:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ALL
OBJECT MODULE PLACED IN .\Objects\all.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE all.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\all.l
                    -st) TABS(2) OBJECT(.\Objects\all.obj)

line level    source

   1          #include <regx52.h>
   2          #include <string.h>
   3          
   4          void print_msg(char[]);
   5          void write(char, int); 
   6          void delay(unsigned int);
   7          void num2();
   8          void num3();
   9          void num4();
  10          int itr0 = 0; // interrupt 0 counter
  11          int itr1 = 0; // interrupt 1 counter
  12          int counter = 0; // timer counter
  13          char roll_msg[] = "I love embedded system.";
  14          
  15          void main() {
  16   1          TMOD = 0x02;
  17   1          PX1=1; // INT1 is highest priority
  18   1          ET0=1; // open TF0
  19   1          TL0=0x00;
  20   1          TH0=0x00;
  21   1      
  22   1          IT0=0; //interrup t 0
  23   1          IT1=0; //interrup t 1
  24   1          EX0=1; // open INT0
  25   1          EX1=1; //open INT1
  26   1          EA=1;
  27   1          write(0x08, 0); // display off
  28   1          delay(60000);
  29   1          delay(60000);
  30   1          write(0x38, 0); // use 2 lines and 5x7 matrix
  31   1          write(0x0F, 0); // LCD ON, cursor ON, cursor blinking ON
  32   1          write(0x06, 0); // increment cursor
  33   1          write(0x01, 0); // clear screen
  34   1          while(1){
  35   2              if(P0 <= 70){
  36   3                  write(0x01, 0); // clear screen
  37   3                  P2_0 = 0;
  38   3                  P2_1 = 1;
  39   3                  P2_2 = 1;
  40   3                  num2();
  41   3              }
  42   2              else if(P0 <= 165){
  43   3                  write(0x01, 0); // clear screen
  44   3                  P2_0 = 1;
  45   3                  P2_1 = 0;
  46   3                  P2_2 = 1;
  47   3                  num3();
  48   3              }
  49   2              else if(P0 <= 255){
  50   3                  write(0x01, 0); // clear screen
  51   3                  P2_0 = 1;
  52   3                  P2_1 = 1;
  53   3                  P2_2 = 0;
  54   3                  num4();
C51 COMPILER V9.60.7.0   ALL                                                               12/27/2023 20:38:49 PAGE 2   

  55   3              }
  56   2          delay(16383);
  57   2          }
  58   1      }
  59          
  60          void int_0(void) interrupt 0 {
  61   1          delay(65535);
  62   1      }
  63          
  64          void int_1(void) interrupt 2 {
  65   1          write(0x01, 0);
  66   1          write(0x80, 0);
  67   1          print_msg("Best1");
  68   1          write(0xC0, 0);
  69   1          print_msg("Worst2");
  70   1          delay(65535);
  71   1          delay(65535);
  72   1          delay(65535);
  73   1      }
  74          
  75          
  76          void timer_0(void) interrupt 1 {
  77   1          delay(65535);
  78   1      }
  79          
  80          
  81          
  82          void print_msg(char msg[]) {
  83   1          int i;
  84   1          for (i=0; i<strlen(msg); i++) // for every character
  85   1              write(msg[i], 1); // monitor displays character
  86   1      }
  87          
  88          void write(char cmd, int rs_value) {
  89   1          P1 = cmd; // P1=cmd
  90   1          P3_6 = rs_value; // RS=rs (1or0)
  91   1          P3_7 = 1; // ENABLE high
  92   1          delay(100);
  93   1          P3_7 = 0; // ENABLE low
  94   1      }
  95          
  96          void delay(unsigned int i) {
  97   1          while (i--); 
  98   1      }
  99          
 100          void num2(){
 101   1              write(0x80, 0);//print position
 102   1              print_msg("0%");
 103   1          write(0xC0, 0);//print position
 104   1              print_msg("=>");
 105   1              delay(65535);
 106   1              write(0xC0, 0);//print position
 107   1              print_msg("==>");
 108   1              delay(65535);
 109   1              write(0xC0, 0);//print position
 110   1              print_msg("===>");
 111   1              delay(65535);
 112   1              write(0xC0, 0);//print position
 113   1              print_msg("====>");
 114   1              delay(65535);
 115   1              write(0xC0, 0);//print position
 116   1              print_msg("=====>");
C51 COMPILER V9.60.7.0   ALL                                                               12/27/2023 20:38:49 PAGE 3   

 117   1              delay(65535);
 118   1              write(0xC0, 0);//print position
 119   1              print_msg("======>");
 120   1              delay(65535);
 121   1              write(0xC0, 0);//print position
 122   1              print_msg("=======>");
 123   1              delay(65535);
 124   1              write(0xC0, 0);//print position
 125   1              print_msg("========>");
 126   1              delay(65535);
 127   1      }
 128          void num3(){
 129   1              write(0x80, 0);//print position
 130   1              print_msg("E14104064");
 131   1              write(0xC0, 0);//print position
 132   1              print_msg("Final exam");
 133   1              //skull
 134   1              write(0x40,0); //RAM POSITION
 135   1              write(0x00,1);
 136   1              write(0x0E,1);
 137   1              write(0x1F,1);
 138   1              write(0x15,1);
 139   1              write(0x0E,1);
 140   1              write(0x0E,1);
 141   1              write(0x00,1);
 142   1              write(0x00,1); //CURSOR
 143   1              //smile------------------------------------
 144   1              write(0x48,0); //RAM POSITION
 145   1              write(0x00,1);
 146   1              write(0x0A,1);
 147   1              write(0x0A,1);
 148   1              write(0x00,1);
 149   1              write(0x11,1);
 150   1              write(0x0E,1);
 151   1              write(0x00,1);  
 152   1              write(0x00,1);  //CURSOR
 153   1      
 154   1              write(0x8F,0);//PRINT POSITION
 155   1              write(0x00,1);
 156   1              write(0xCF,0);//PRINT POSITION
 157   1              write(0x01,1);
 158   1      }
 159          
 160          void num4(){
 161   1          write(0x80, 0);//print position
 162   1          print_msg("I love embedded ");
 163   1          delay(65535);
 164   1          write(0x80, 0);//print position
 165   1          print_msg(" love embedded s"); 
 166   1          delay(65535);
 167   1          write(0x80, 0);//print position
 168   1          print_msg("love embedded sy");
 169   1          delay(65535);
 170   1          write(0x80, 0);//print position
 171   1          print_msg("ove embedded sys");
 172   1          delay(65535);
 173   1          write(0x80, 0);//print position
 174   1          print_msg("ve embedded syst");
 175   1          delay(65535);
 176   1          write(0x80, 0);//print position
 177   1          print_msg("e embedded syste");
 178   1          delay(65535);
C51 COMPILER V9.60.7.0   ALL                                                               12/27/2023 20:38:49 PAGE 4   

 179   1          write(0x80, 0);//print position
 180   1          print_msg(" embedded system");
 181   1          delay(65535);
 182   1          write(0x80, 0);//print position
 183   1          print_msg("embedded system.");
 184   1          delay(65535);
 185   1          write(0x80, 0);//print position
 186   1          print_msg("mbedded system. ");
 187   1          delay(65535);
 188   1          write(0x80, 0);//print position
 189   1          print_msg("bedded system. I");
 190   1          delay(65535);
 191   1          write(0x80, 0);//print position
 192   1          print_msg("edded system. I ");
 193   1          delay(65535);
 194   1          write(0x80, 0);//print position
 195   1          print_msg("dded system. I l");
 196   1          delay(65535);
 197   1          write(0x80, 0);//print position
 198   1          print_msg("ded system. I lo");
 199   1          delay(65535);
 200   1          write(0x80, 0);//print position
 201   1          print_msg("ed system. I lov");
 202   1          delay(65535);
 203   1          write(0x80, 0);//print position
 204   1          print_msg("d system. I love");
 205   1          delay(65535);
 206   1          write(0x80, 0);//print position
 207   1          print_msg(" system. I love ");
 208   1          delay(65535);
 209   1          write(0x80, 0);//print position
 210   1          print_msg("system. I love e");
 211   1          delay(65535);
 212   1          write(0x80, 0);//print position
 213   1          print_msg("ystem. I love em");
 214   1          delay(65535);
 215   1          write(0x80, 0);//print position
 216   1          print_msg("stem. I love emb");
 217   1          delay(65535);
 218   1          write(0x80, 0);//print position
 219   1          print_msg("tem. I love embe");
 220   1          delay(65535);
 221   1          write(0x80, 0);//print position
 222   1          print_msg("em. I love embed");
 223   1          delay(65535);
 224   1          write(0x80, 0);//print position
 225   1          print_msg("m. I love embedd");
 226   1          delay(65535);
 227   1          write(0x80, 0);//print position
 228   1          print_msg(". I love embedde");
 229   1          delay(65535);
 230   1          write(0x80, 0);//print position
 231   1          print_msg(" I love embedded");
 232   1          delay(65535);
 233   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1184    ----
   CONSTANT SIZE    =    497    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   ALL                                                               12/27/2023 20:38:49 PAGE 5   

   DATA SIZE        =     30       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
