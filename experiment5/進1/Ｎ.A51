ORG 0000h
JMP START 
ORG 0030h
START: 
	  MOV SP, #32h 
      MOV A, #0xFC 
	  MOV R7, #0
      MOV P2, A 
      JMP  MARQUEE 
      
MARQUEE:  
       CALL DELAY
	   AFTER_PUSH:	   RL A 
					   MOV P2, A 
					   JMP MARQUEE 
DELAY: 
	   MOV R1,#50
	   D1:MOV R2,#20
	   D2:MOV R3,#150
	   SETB P1.0 
	   SETB P1.4 
	   CHECK: JNB P1.0,DO_PUSH
       JNB P1.4,DO_POP
	   DJNZ R3,CHECK
	   DJNZ R2,D2
	   DJNZ R1,D1
       RET
ONLY_DELAY:
	   MOV R4,#50
	   D3:MOV R5,#20
	   D4:MOV R6,#100
	   DJNZ R6,$
	   DJNZ R5,D4
	   DJNZ R4,D3
DO_PUSH:
      CALL ONLY_DELAY
      PUSH P2
	  INC R7
	  JMP AFTER_PUSH
DO_POP:
	  POP P2
	  CALL ONLY_DELAY
	  DJNZ R7 ,DO_POP
END
	
/*ORG 0000h
JMP LOOP ;jump into loop
ORG 0030h
LOOP:
	MOV SP, #32h
	MOV A, #0xFC
	MOV P2, A
	SETB P1.0;DO_PUSH
	SETB P1.4;DO_POP
	MOV R0, #8D
	RL A
	SJMP MARQUEE
MARQUEE:
	CALL DELAY
	MOV R0, #250D
	RL A
	MOV P2,A
	JNB P1.0, DO_PUSH
	JNB P1.4, DO_POP
	DJNZ R0, MARQUEE
	SJMP LOOP
DELAY: 
	MOV R1,#20
	D1:MOV R2,#50
	D2:MOV R3,#250
	DJNZ R3,$
	DJNZ R2,D2
	DJNZ R1,D1
    RET	
DO_PUSH:
	CALL DELAY
    PUSH P2
	INC R4
	JMP MARQUEE
DO_POP:
	CALL DELAY
	POP P2
	DJNZ R4, DO_POP
END*/

/*ORG 0000H
MOV SP, #30H
MOV A, #11111100B
MOV R5, #0
JMP RUN0 ;jump into loop
ORG 0030H
RUN0:
		MOV R7, #250
RUN:
		MOV R6, #250
		MOV R0, A
		MOV P2, A
		SETB P1.0
		SETB P1.4
		JNB P1.0, PUSH1
CONT:
		JNB P1.4, POPALL
		DJNZ R6, $
		MOV R6, #250
		DJNZ R6, $
		DJNZ R7, RUN
		RL A
		SJMP RUN0
PUSH1:
		ACALL DELAY125
		ACALL DELAY125
		PUSH 00H
		INC R5
		SJMP CONT
DELAY125:
		MOV R7, #250 ; move 50 times into R4
LOOP1:
		MOV R6, #250 ; move 250 times into R3
		DJNZ R6, $ ; jump to itself R3 times
		DJNZ R7, LOOP1 ; delay 25ms
		RET ; return to main code
POPALL:
		ACALL DELAY125
		ACALL DELAY125
		ACALL DELAY125
		ACALL DELAY125
		POP 00H
		MOV A, R0
		MOV P2, A
		DJNZ R5, POPALL
END*/
	

	  
	
	
	
	
